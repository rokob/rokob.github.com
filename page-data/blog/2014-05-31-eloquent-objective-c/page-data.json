{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2014-05-31-eloquent-objective-c/","result":{"data":{"markdownRemark":{"html":"<p>I recently made a transition from writing Objective-C all day to writing Ruby all day.\nPart of this transition was facilitated by many Ruby books as I discovered that the\nRuby community is both very opinionated as well as well documented. It is delightful\nthat people who use the language all do so in a way that stresses being idiomatic. This\nis very similar to Python's \"one way to do it\", but goes beyond merely how to solve\nproblems to include whether one should write tests, how to document, etc. The best of\nthe books on Ruby that I have used is called <a href=\"http://www.amazon.com/Eloquent-Ruby-Addison-Wesley-Professional-Series/dp/0321584104\">\"Eloquent Ruby\"</a> by Russ Olsen.\nThis book is not just a good Ruby book, it is one of the better books on programming that\nI have read in a while.</p>\n<p>I think that Objective-C is missing this community primarily because the language is\nstrangled by Apple, and therefore there is this assumption that everything one might need\nto know can be found in the SDK documentation. There are a handful of Objective-C books,\nthe best one I am told is <a href=\"http://www.effectiveobjectivec.com/\">Effective Objective-C</a> by Matt Galloway but\nI have not read it so I can't say one way or another. But there is a dearth of books\nsimilar to what Ruby has. There are also a few different styles for how people write code.\nThe main style is defined by how Apple does things, how they suggest to do things, and\nhow their code examples are written. This is why testing is rare, singletons are everywhere,\netc. On the other hand, there is also a very vibrant and strong community of iOS and Mac OS\ndevelopers. This leads to other styles being stated as the right way to do things. This is\nusually accompanied by much bike-shedding about tab stops and dot versus bracket syntax.\nI think the Objective-C community could benefit from a similar \"Eloquent Objective-C\" book\nto drive solid coding practices. I am not saying I am the right person to do this, but\nI have irrationally strong opinions so I won't mind giving it a shot.</p>\n<p>I am going to give it a shot in a series of posts. I am just going to follow the Ruby book's\nstructure. The first chapter is \"Write Code That Looks Like Ruby\" so we'll start there.\nThis is probably the hardest one to write considering all of the opinions in the Objective-C\ncommunity. I'll pick it up soon.</p>","frontmatter":{"title":"Eloquent Objective-C","date":"31 May 2014","categories":"code","tags":["code","book","objc","ruby"]},"timeToRead":2,"wordCount":{"words":410},"fields":{"sha":"9a9b8cc9a846a5ab6c26cb187880f3092ad02345"},"parent":{"relativePath":"2014-05-31-eloquent-objective-c.md"}}},"pageContext":{"slug":"/blog/2014-05-31-eloquent-objective-c/"}},"staticQueryHashes":["3159585216","3192915761"],"slicesMap":{}}