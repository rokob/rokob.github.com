{"version":3,"file":"component---src-templates-tag-js-195017f3819c4f1a843c.js","mappings":"4OAOA,MAAMA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAI,CAAAC,OAAA,aAAXF,CAAY,CAAAG,KAAA,SAAAC,OAAA,uCAKvBC,GAASL,EAAAA,EAAAA,GAAA,MAAAE,OAAA,aAAAF,CAAA,kBACIM,EAAAA,EAAAA,GAAO,EAAI,GAAE,KAG1BC,GAAQP,EAAAA,EAAAA,GAAA,QAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,QAAAC,OAAA,eAiCd,UA7BYI,IAA4B,IAA3B,YAAEC,EAAW,KAAEC,GAAMF,EAChC,MAAM,IAAEG,GAAQF,GACV,MAAEG,EAAK,WAAEC,GAAeH,EAAKI,kBAC7BC,EAAeF,EAAU,SACd,IAAfA,EAAmB,GAAK,KAAG,iBACZF,EAAG,IAEpB,OACEK,EAAAA,EAAAA,GAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,GAAA,UAAKD,GACJH,EAAMM,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAM,KAAEE,EAAI,MAAEC,GAAUF,EAAKG,YACvBC,EAAOJ,EAAKK,OAAOC,KACzB,OACEV,EAAAA,EAAAA,GAAA,OAAKW,IAAKP,EAAKQ,KACbZ,EAAAA,EAAAA,GAACjB,EAAQ,CAAC8B,GAAIL,IACZR,EAAAA,EAAAA,GAACX,EAAS,KACPiB,EAAM,KAACN,EAAAA,EAAAA,GAACT,EAAQ,KAAC,KAAGc,KAEvBL,EAAAA,EAAAA,GAAA,SAAII,EAAKU,UAEP,KAGVd,EAAAA,EAAAA,GAACf,EAAAA,GAAI,CAAC4B,GAAG,SAAQ,YACV,EAMN,MAAME,EAAOC,IAAgC,IAA/B,SAAEC,EAAQ,YAAExB,GAAauB,EAC5C,MAAM,IAAErB,GAAQF,EAChB,OAAOO,EAAAA,EAAAA,GAACkB,EAAAA,EAAG,CAACC,SAAUF,EAASE,SAAUb,MAAK,OAASX,GAAS,C","sources":["webpack://rokob.github.com/./src/templates/tag.js"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport { rhythm } from \"../utils/typography\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst PostLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst PostTitle = styled.h3`\n  margin-bottom: ${rhythm(1 / 4)};\n`;\n\nconst PostDate = styled.span`\n  color: #555;\n`;\n\nconst Tag = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n\n  return (\n    <Layout>\n      <h1>{tagHeader}</h1>\n      {edges.map(({ node }) => {\n        const { date, title } = node.frontmatter;\n        const path = node.fields.slug;\n        return (\n          <div key={node.id}>\n            <PostLink to={path}>\n              <PostTitle>\n                {title} <PostDate>â€” {date}</PostDate>\n              </PostTitle>\n              <p>{node.excerpt}</p>\n            </PostLink>\n          </div>\n        );\n      })}\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  );\n};\n\nexport default Tag;\n\nexport const Head = ({ location, pageContext }) => {\n  const { tag } = pageContext;\n  return <Seo pathname={location.pathname} title={`Tag ${tag}`} />;\n};\n\nexport const query = graphql`\n  query markdownContentForTagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n"],"names":["PostLink","_styled","Link","target","name","styles","PostTitle","rhythm","PostDate","_ref","pageContext","data","tag","edges","totalCount","allMarkdownRemark","tagHeader","___EmotionJSX","Layout","map","_ref2","node","date","title","frontmatter","path","fields","slug","key","id","to","excerpt","Head","_ref3","location","Seo","pathname"],"sourceRoot":""}