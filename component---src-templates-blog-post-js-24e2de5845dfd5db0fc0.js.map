{"version":3,"file":"component---src-templates-blog-post-js-24e2de5845dfd5db0fc0.js","mappings":"+PAQA,MAAMA,GAAOC,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,uBAIPC,GAASJ,EAAAA,EAAAA,GAAA,MAAAC,OAAA,aAAAD,CAAA,kBACIK,EAAAA,EAAAA,GAAO,IAAM,KAG1BC,GAAQN,EAAAA,EAAAA,GAAA,MAAAC,OAAA,aAAAD,CAAA,eACEK,EAAAA,EAAAA,GAAO,IAAM,mBACVA,EAAAA,EAAAA,GAAO,GAAE,gBAItBE,GAAQP,EAAAA,EAAAA,GAAA,OAAAC,OAAA,aAAAD,CAAA,eACEK,EAAAA,EAAAA,GAAO,GAAE,mBACNA,EAAAA,EAAAA,GAAO,GAAE,mBAItBG,GAAYR,EAAAA,EAAAA,GAAA,MAAAC,OAAA,aAAAD,CAAA,eACFK,EAAAA,EAAAA,GAAO,IAAM,mBACVA,EAAAA,EAAAA,GAAO,EAAI,GAAE,KAsChC,UAnCqBI,IAAe,IAAd,KAAEC,GAAMD,EAC5B,MAAME,EAAOD,EAAKE,eAGZC,EAFOF,EAAKG,YAAYC,KAERC,KAAKC,IACzBC,EAAAA,EAAAA,GAACC,EAAAA,GAAI,CAACC,IAAKH,EAAKI,GAAE,SAAWJ,EAAG,KAC7BA,KAGCK,EAAiBC,IAAUV,GAAU,CAACW,EAAGC,IAAOA,EAAI,CAAC,KAAMD,GAAK,CAACA,KAEjEE,EAAMf,EAAKgB,OAAOD,IAClBE,EAAWF,EAAMA,EAAIG,OAAO,EAAG,GAAKH,EAEpCI,EAAO,oEADInB,EAAKoB,OAAOC,aAEvBC,EAAM,oDAAuDP,EAEnE,OACER,EAAAA,EAAAA,GAACgB,EAAAA,EAAM,MACLhB,EAAAA,EAAAA,GAACd,EAAS,KAAEO,EAAKG,YAAYqB,QAC7BjB,EAAAA,EAAAA,GAACZ,EAAQ,KAAEK,EAAKG,YAAYsB,OAC5BlB,EAAAA,EAAAA,GAACX,EAAQ,MACPW,EAAAA,EAAAA,GAACV,EAAY,KAAC,aAAWG,EAAKG,YAAYuB,aAC1CnB,EAAAA,EAAAA,GAACV,EAAY,MACXU,EAAAA,EAAAA,GAACC,EAAAA,GAAI,CAACE,GAAE,SAAW,SAAY,IAAEC,KAGrCJ,EAAAA,EAAAA,GAACnB,EAAO,CAACuC,wBAAyB,CAAEC,OAAQ5B,EAAK6B,SACjDtB,EAAAA,EAAAA,GAAA,YACEA,EAAAA,EAAAA,GAAA,KAAGuB,KAAMX,GAAS,WAAW,QAAIZ,EAAAA,EAAAA,GAAA,KAAGuB,KAAMR,GAASL,IAE9C,EAMN,MAAMc,EAAOC,IAAyB,IAAxB,SAAEC,EAAQ,KAAElC,GAAMiC,EACrC,MAAMR,EAAQzB,EAAKE,eAAeE,YAAYqB,MAC9C,OAAOjB,EAAAA,EAAAA,GAAC2B,EAAAA,EAAG,CAACC,SAAUF,EAASE,SAAUX,MAAOA,GAAS,C,uBCxE3D,IAAIY,EAAY,EAAQ,MACpBC,EAAgB,EAAQ,MAoC5BC,EAAOC,QAvBP,SAASC,EAAYC,EAAOC,EAAOC,EAAWC,EAAUC,GACtD,IAAIC,GAAS,EACTC,EAASN,EAAMM,OAKnB,IAHAJ,IAAcA,EAAYN,GAC1BQ,IAAWA,EAAS,MAEXC,EAAQC,GAAQ,CACvB,IAAIC,EAAQP,EAAMK,GACdJ,EAAQ,GAAKC,EAAUK,GACrBN,EAAQ,EAEVF,EAAYQ,EAAON,EAAQ,EAAGC,EAAWC,EAAUC,GAEnDT,EAAUS,EAAQG,GAEVJ,IACVC,EAAOA,EAAOE,QAAUC,EAE5B,CACA,OAAOH,CACT,C,uBCnCA,IAAII,EAAW,EAAQ,KACnBC,EAAc,EAAQ,MAoB1BZ,EAAOC,QAVP,SAAiBY,EAAYC,GAC3B,IAAIN,GAAS,EACTD,EAASK,EAAYC,GAAcE,MAAMF,EAAWJ,QAAU,GAKlE,OAHAE,EAASE,GAAY,SAASH,EAAOvC,EAAK0C,GACxCN,IAASC,GAASM,EAASJ,EAAOvC,EAAK0C,EACzC,IACON,CACT,C,uBCnBA,IAAIS,EAAS,EAAQ,MACjBC,EAAc,EAAQ,MACtBC,EAAU,EAAQ,MAGlBC,EAAmBH,EAASA,EAAOI,wBAAqBC,EAc5DrB,EAAOC,QALP,SAAuBS,GACrB,OAAOQ,EAAQR,IAAUO,EAAYP,OAChCS,GAAoBT,GAASA,EAAMS,GAC1C,C,uBCjBA,IAAIjB,EAAc,EAAQ,MACtBnC,EAAM,EAAQ,MA2BlBiC,EAAOC,QAJP,SAAiBY,EAAYC,GAC3B,OAAOZ,EAAYnC,EAAI8C,EAAYC,GAAW,EAChD,C,uBC1BA,IAAIQ,EAAW,EAAQ,MACnBC,EAAe,EAAQ,MACvBC,EAAU,EAAQ,MAClBN,EAAU,EAAQ,MAiDtBlB,EAAOC,QALP,SAAaY,EAAYC,GAEvB,OADWI,EAAQL,GAAcS,EAAWE,GAChCX,EAAYU,EAAaT,EAAU,GACjD,C","sources":["webpack://rokob.github.com/./src/templates/blog-post.js","webpack://rokob.github.com/./node_modules/lodash/_baseFlatten.js","webpack://rokob.github.com/./node_modules/lodash/_baseMap.js","webpack://rokob.github.com/./node_modules/lodash/_isFlattenable.js","webpack://rokob.github.com/./node_modules/lodash/flatMap.js","webpack://rokob.github.com/./node_modules/lodash/map.js"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport styled from \"@emotion/styled\";\nimport { rhythm } from \"../utils/typography\";\nimport _ from \"lodash\";\n\nconst Justify = styled.div`\n  text-align: justify;\n`;\n\nconst PostTitle = styled.h2`\n  margin-bottom: ${rhythm(1 / 2)};\n`;\n\nconst PostDate = styled.h3`\n  margin-top: ${rhythm(1 / 2)};\n  margin-bottom: ${rhythm(1)};\n  color: #bbb;\n`;\n\nconst Metadata = styled.div`\n  margin-top: ${rhythm(2)};\n  margin-bottom: ${rhythm(1)};\n  color: inherit;\n`;\n\nconst MetadataItem = styled.h4`\n  margin-top: ${rhythm(1 / 2)};\n  margin-bottom: ${rhythm(1 / 4)};\n`;\n\nconst BlogPostPage = ({ data }) => {\n  const post = data.markdownRemark;\n  const tags = post.frontmatter.tags;\n\n  const tagLinks = tags.map((tag) => (\n    <Link key={tag} to={`/tags/${tag}/`}>\n      {tag}\n    </Link>\n  ));\n  const tagLinksJoined = _.flatMap(tagLinks, (a, i) => (i ? [\", \", a] : [a]));\n\n  const sha = post.fields.sha;\n  const shortSha = sha ? sha.substr(0, 8) : sha;\n  const filename = post.parent.relativePath;\n  const history = `https://github.com/rokob/rokob.github.com/commits/source/content/${filename}`;\n  const commit = `https://github.com/rokob/rokob.github.com/commit/${sha}`;\n\n  return (\n    <Layout>\n      <PostTitle>{post.frontmatter.title}</PostTitle>\n      <PostDate>{post.frontmatter.date}</PostDate>\n      <Metadata>\n        <MetadataItem>Category: {post.frontmatter.categories}</MetadataItem>\n        <MetadataItem>\n          <Link to={`/tags`}>Tags:</Link> {tagLinksJoined}\n        </MetadataItem>\n      </Metadata>\n      <Justify dangerouslySetInnerHTML={{ __html: post.html }} />\n      <div>\n        <a href={history}>History</a> -- <a href={commit}>{shortSha}</a>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogPostPage;\n\nexport const Head = ({ location, data }) => {\n  const title = data.markdownRemark.frontmatter.title;\n  return <Seo pathname={location.pathname} title={title} />;\n};\n\nexport const query = graphql`\n  query ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMM YYYY\")\n        categories\n        tags\n      }\n      timeToRead\n      wordCount {\n        words\n      }\n      fields {\n        sha\n      }\n      parent {\n        ... on File {\n          relativePath\n        }\n      }\n    }\n  }\n`;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n"],"names":["Justify","_styled","target","name","styles","PostTitle","rhythm","PostDate","Metadata","MetadataItem","_ref","data","post","markdownRemark","tagLinks","frontmatter","tags","map","tag","___EmotionJSX","Link","key","to","tagLinksJoined","_flatMap","a","i","sha","fields","shortSha","substr","history","parent","relativePath","commit","Layout","title","date","categories","dangerouslySetInnerHTML","__html","html","href","Head","_ref2","location","Seo","pathname","arrayPush","isFlattenable","module","exports","baseFlatten","array","depth","predicate","isStrict","result","index","length","value","baseEach","isArrayLike","collection","iteratee","Array","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","arrayMap","baseIteratee","baseMap"],"sourceRoot":""}