{"version":3,"file":"component---src-templates-blog-list-js-4922d9da0b6024e3d157.js","mappings":"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","sources":["webpack://rokob.github.com/./src/templates/blog-list.js"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport { rhythm } from \"../utils/typography\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst PostLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst PostTitle = styled.h3`\n  margin-bottom: ${rhythm(1 / 4)};\n`;\n\nconst PostDate = styled.span`\n  color: #555;\n`;\n\nconst BlogList = ({ pageContext, data }) => {\n  const { numPages, pageNumber, prev, next } = pageContext;\n\n  return (\n    <Layout>\n      <h1>\n        Page {pageNumber} of {numPages}\n      </h1>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <div key={node.id}>\n          <PostLink to={node.fields.slug}>\n            <PostTitle>\n              {node.frontmatter.title}{\" \"}\n              <PostDate>â€” {node.frontmatter.date}</PostDate>\n            </PostTitle>\n            <p>{node.frontmatter.excerpt || node.excerpt}</p>\n          </PostLink>\n        </div>\n      ))}\n      <Pagination\n        numPages={numPages}\n        pageNumber={pageNumber}\n        prev={prev}\n        next={next}\n      />\n    </Layout>\n  );\n};\n\nconst PaginationLink = styled(Link)`\n  padding-right: ${rhythm(1 / 4)};\n`;\nconst PaginationFirstLink = styled(Link)`\n  padding-left: ${rhythm(1 / 4)};\n  padding-right: ${rhythm(1 / 4)};\n`;\nconst PaginationLastLink = styled(Link)`\n  padding-right: ${rhythm(1 / 4)};\n`;\nconst PaginationPlain = styled.span`\n  padding-right: ${rhythm(1 / 4)};\n`;\nconst PaginationFirstPlain = styled.span`\n  padding-left: ${rhythm(1 / 4)};\n  padding-right: ${rhythm(1 / 4)};\n`;\nconst PaginationLastPlain = styled.span`\n  padding-right: ${rhythm(1 / 4)};\n`;\n\nconst Pagination = ({ numPages, pageNumber, prev, next }) => {\n  const context = 2;\n  const showAllLimit = 15;\n  let pages = [];\n  if (numPages <= showAllLimit) {\n    pages = Array.from({ length: numPages }).map((_, i) => {\n      return {\n        key: i,\n        to: i + 1 === pageNumber ? null : i > 0 ? `/blog/${i + 1}` : `/`,\n        name: `${i + 1}`,\n        first: i === 0,\n        last: i === numPages - 1,\n      };\n    });\n  } else {\n    let key = 0;\n    if (pageNumber - context > 1) {\n      pages.push({ key: key++, to: `/`, name: \"1\", first: true, last: false });\n    }\n    if (pageNumber - context > 2) {\n      pages.push({ key: key++, to: null, name: \"...\" });\n    }\n    const leftContext = Math.min(\n      Math.max(pageNumber - context + 1, 1),\n      context\n    );\n    Array.from({ length: leftContext }).forEach((_, i) => {\n      const to = pageNumber - (context - i);\n      const first = pageNumber - context <= 1 && to < 2;\n      pages.push({\n        key: key++,\n        to: to < 2 ? `/` : `/blog/${to}`,\n        name: `${to < 2 ? 1 : to}`,\n        first: first,\n      });\n    });\n    pages.push({ key: key++, to: null, name: `${pageNumber}` });\n    const rightContext = Math.min(Math.max(0, numPages - pageNumber), context);\n    Array.from({ length: rightContext }).forEach((_, i) => {\n      const to = pageNumber + i + 1;\n      const last = pageNumber + context >= numPages && to >= numPages;\n      pages.push({ key: key++, to: `/blog/${to}`, name: `${to}`, last: last });\n    });\n    if (pageNumber + context < numPages) {\n      if (pageNumber + context < numPages - 1) {\n        pages.push({ key: key++, to: null, name: \"...\" });\n      }\n      pages.push({\n        key: key,\n        to: `/blog/${numPages}`,\n        name: `${numPages}`,\n        first: false,\n        last: true,\n      });\n    }\n  }\n  return (\n    <div>\n      <Link to={prev}>Prev</Link>\n      {\" -\"}\n      {pages.map(({ key, to, name, first, last }) => {\n        if (to && first) {\n          return (\n            <PaginationFirstLink key={key} to={to}>\n              {name}\n            </PaginationFirstLink>\n          );\n        } else if (to && last) {\n          return (\n            <PaginationLastLink key={key} to={to}>\n              {name}\n            </PaginationLastLink>\n          );\n        } else if (to) {\n          return (\n            <PaginationLink key={key} to={to}>\n              {name}\n            </PaginationLink>\n          );\n        } else if (first) {\n          return <PaginationFirstPlain key={key}>{name}</PaginationFirstPlain>;\n        } else if (last) {\n          return <PaginationLastPlain key={key}>{name}</PaginationLastPlain>;\n        } else {\n          return <PaginationPlain key={key}>{name}</PaginationPlain>;\n        }\n      })}\n      {next && \"- \"}\n      {next && <Link to={next}>Next</Link>}\n    </div>\n  );\n};\n\nexport default BlogList;\n\nexport const Head = ({ location, pageContext }) => {\n  const { numPages, pageNumber } = pageContext;\n  return (\n    <Seo\n      pathname={location.pathname}\n      title={`Blog list page ${pageNumber} of ${numPages}`}\n    />\n  );\n};\n\nexport const query = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { published: { ne: false } } }\n      sort: { frontmatter: { date: DESC } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            excerpt\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n"],"names":["PostLink","_styled","Link","target","name","styles","PostTitle","rhythm","PostDate","PaginationLink","PaginationFirstLink","PaginationLastLink","PaginationPlain","PaginationFirstPlain","PaginationLastPlain","Pagination","_ref3","numPages","pageNumber","prev","next","pages","Array","from","length","map","_","i","key","to","first","last","push","leftContext","Math","min","max","forEach","rightContext","___EmotionJSX","_ref4","_ref","pageContext","data","Layout","allMarkdownRemark","edges","_ref2","node","id","fields","slug","frontmatter","title","date","excerpt","Head","_ref5","location","Seo","pathname"],"sourceRoot":""}