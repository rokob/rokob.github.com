{"version":3,"file":"component---src-pages-reading-js-cd120a53bb526792f88c.js","mappings":"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","sources":["webpack://rokob.github.com/./src/utils/format.js","webpack://rokob.github.com/./src/components/BarChart.js","webpack://rokob.github.com/./src/pages/reading.js","webpack://rokob.github.com/./node_modules/lodash/_baseFindIndex.js","webpack://rokob.github.com/./node_modules/lodash/_baseIndexOf.js","webpack://rokob.github.com/./node_modules/lodash/_baseIsNaN.js","webpack://rokob.github.com/./node_modules/lodash/_baseTrim.js","webpack://rokob.github.com/./node_modules/lodash/_baseValues.js","webpack://rokob.github.com/./node_modules/lodash/_strictIndexOf.js","webpack://rokob.github.com/./node_modules/lodash/_trimmedEndIndex.js","webpack://rokob.github.com/./node_modules/lodash/each.js","webpack://rokob.github.com/./node_modules/lodash/includes.js","webpack://rokob.github.com/./node_modules/lodash/toFinite.js","webpack://rokob.github.com/./node_modules/lodash/toInteger.js","webpack://rokob.github.com/./node_modules/lodash/toNumber.js","webpack://rokob.github.com/./node_modules/lodash/values.js"],"sourcesContent":["export const niceNum = (num) => {\n  if (!num) { return num; }\n  if (num > 999 && num < 1000000) {\n    let back = num % 1000;\n    if (back < 10) {\n      back = `00${back}`\n    } else if (back < 100) {\n      back = `0${back}`\n    }\n    return `${Math.floor(num / 1000)},${back}`;\n  }\n  return `${num}`\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { rhythm } from \"../utils/typography\";\nimport { niceNum } from \"../utils/format\";\n\nconst Chart = styled.div`\n  height: 300px;\n  width: 100%;\n  position: relative;\n  padding-bottom: ${rhythm(1 / 4)};\n`;\n\nconst ChartWrapper = styled.div`\n  position: relative;\n  height: 340px;\n  width: 100%;\n  padding-top: ${rhythm(1 / 4)};\n  margin-bottom: ${rhythm(1)};\n`;\n\nconst HoverData = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nexport default class BarChart extends React.Component {\n  state = { value: null, year: null, month: null };\n\n  enterBar = (bucket) => {\n    const parts = bucket[0].split(\"-\");\n    const year = parts[0];\n    const month = parts[1];\n    this.setState({ value: bucket[1], year: year, month: month });\n  };\n\n  leaveBar = () => {\n    this.setState({ value: null, year: null, month: null });\n  };\n\n  render() {\n    const { title, dates, data, datum } = this.props;\n    let bars = [];\n    let max = 0;\n    let maxIdx = 0;\n    for (let d = 0; d < dates.length; d++) {\n      const key = dates[d];\n      const value = datum(data[key]) || 0;\n      if (value > max) {\n        max = value;\n        maxIdx = d;\n      }\n      bars.push([dates[d], value]);\n    }\n    const bucketCount = max < 10 ? max : 10;\n    const bucketSize = Math.ceil(max / bucketCount);\n    const buckets = bars.map((bar) => [\n      bar[0],\n      bar[1],\n      Math.round(bar[1] / bucketSize),\n    ]);\n\n    let firstDate = dates[0].split(\"-\");\n    firstDate = `${niceMonth(firstDate[1])} ${firstDate[0]}`;\n    let lastDate = dates[dates.length - 1].split(\"-\");\n    lastDate = `${niceMonth(lastDate[1])} ${lastDate[0]}`;\n    const barWidthVal = Math.floor((100 / bars.length) * 100) / 100;\n    const barWidth = `${barWidthVal}%`;\n    const hoverString = this.state.value\n      ? `${niceMonth(this.state.month)} ${this.state.year}: ${niceNum(\n          this.state.value\n        )}`\n      : null;\n    return (\n      <div>\n        <h4>{title}</h4>\n        <ChartWrapper>\n          <div\n            css={{\n              position: \"absolute\",\n              left: \"0\",\n              bottom: \"0\",\n            }}\n          >\n            {firstDate}\n          </div>\n          <div\n            css={{\n              position: \"absolute\",\n              right: \"0\",\n              bottom: \"0\",\n            }}\n          >\n            {lastDate}\n          </div>\n          <div\n            css={{\n              position: \"absolute\",\n              left: `${barWidthVal * (1.5 + maxIdx)}%`,\n              top: \"0\",\n            }}\n          >\n            {niceNum(max)}\n          </div>\n          <Chart>\n            {buckets.map((bucket, i) => (\n              <Bar\n                key={i}\n                onMouseEnter={() => this.enterBar(bucket)}\n                onMouseLeave={() => this.leaveBar()}\n                barWidth={barWidth}\n                bucket={bucket[2]}\n                bucketCount={bucketCount}\n              />\n            ))}\n          </Chart>\n          <HoverData>{hoverString}</HoverData>\n        </ChartWrapper>\n      </div>\n    );\n  }\n}\n\nconst Bar = ({ barWidth, bucket, bucketCount, onMouseEnter, onMouseLeave }) => (\n  // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n  <div\n    css={{\n      width: barWidth,\n      height: `${(bucket / bucketCount) * 100}%`,\n      backgroundColor: \"#939393\",\n      display: \"inline-block\",\n      borderRight: \"1px solid #000\",\n      borderLeft: \"1px solid #fff\",\n      borderBottom: \"1px solid #939393\",\n    }}\n    onMouseEnter={onMouseEnter}\n    onMouseLeave={onMouseLeave}\n  >\n    <span css={{ display: \"none\" }}>{bucket}</span>\n  </div>\n);\n\nconst niceMonth = (month) =>\n  ({\n    \"01\": \"Jan\",\n    \"02\": \"Feb\",\n    \"03\": \"Mar\",\n    \"04\": \"Apr\",\n    \"05\": \"May\",\n    \"06\": \"Jun\",\n    \"07\": \"Jul\",\n    \"08\": \"Aug\",\n    \"09\": \"Sep\",\n    10: \"Oct\",\n    11: \"Nov\",\n    12: \"Dec\",\n  }[month]);\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport _ from \"lodash\";\n\nimport BarChart from \"../components/BarChart\";\n\nimport { niceNum } from \"../utils/format\";\n\nconst ReadingPage = ({ data }) => {\n  const books = data.allMarkdownRemark.edges;\n  let firstYear = null;\n  let firstMonth = null;\n  let lastMonth = null;\n  let lastYear = null;\n  let monthly = {};\n  let yearly = {};\n  let totals = {\n    fiction: 0,\n    nonfiction: 0,\n    bad: 0,\n    okay: 0,\n    good: 0,\n    great: 0,\n    count: 0,\n    pagecount: 0,\n  };\n  _.each(books, (book) => {\n    const data = book.node.frontmatter;\n    const date = data.date;\n    const year = date.split(\"-\")[0];\n    const month = date.split(\"-\")[1];\n    firstYear = firstYear || year;\n    firstMonth = firstMonth || month;\n    lastYear = year;\n    lastMonth = month;\n    const tags = data.tags;\n    const pagecount = data.pagecount || 0;\n    let monthData = monthly[date] || {\n      fiction: 0,\n      nonfiction: 0,\n      bad: 0,\n      okay: 0,\n      good: 0,\n      great: 0,\n      count: 0,\n      pagecount: 0,\n    };\n    let yearData = yearly[year] || {\n      fiction: 0,\n      nonfiction: 0,\n      bad: 0,\n      okay: 0,\n      good: 0,\n      great: 0,\n      count: 0,\n      pagecount: 0,\n    };\n    if (_.includes(tags, \"fiction\")) {\n      monthData[\"fiction\"] += 1;\n      yearData[\"fiction\"] += 1;\n      totals[\"fiction\"] += 1;\n    }\n    if (_.includes(tags, \"nonfiction\")) {\n      monthData[\"nonfiction\"] += 1;\n      yearData[\"nonfiction\"] += 1;\n      totals[\"nonfiction\"] += 1;\n    }\n    if (_.includes(tags, \"bad\")) {\n      monthData[\"bad\"] += 1;\n      yearData[\"bad\"] += 1;\n      totals[\"bad\"] += 1;\n    }\n    if (_.includes(tags, \"okay\")) {\n      monthData[\"okay\"] += 1;\n      yearData[\"okay\"] += 1;\n      totals[\"okay\"] += 1;\n    }\n    if (_.includes(tags, \"good\")) {\n      monthData[\"good\"] += 1;\n      yearData[\"good\"] += 1;\n      totals[\"good\"] += 1;\n    }\n    if (_.includes(tags, \"great\")) {\n      monthData[\"great\"] += 1;\n      yearData[\"great\"] += 1;\n      totals[\"great\"] += 1;\n    }\n    monthData[\"pagecount\"] += pagecount;\n    yearData[\"pagecount\"] += pagecount;\n    totals[\"pagecount\"] += pagecount;\n    monthData[\"count\"] += 1;\n    yearData[\"count\"] += 1;\n    totals[\"count\"] += 1;\n\n    monthly[date] = monthData;\n    yearly[year] = yearData;\n  });\n  const months = [\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"10\",\n    \"11\",\n    \"12\",\n  ];\n  firstYear = parseInt(firstYear);\n  lastYear = parseInt(lastYear);\n  let years = [];\n  for (let y = firstYear; y <= lastYear; y++) {\n    years.push(String(y));\n  }\n  let dates = [];\n  for (let m = months.indexOf(firstMonth); m < months.length; m++) {\n    dates.push(`${String(firstYear)}-${months[m]}`);\n  }\n  for (let y = 1; y < years.length - 1; y++) {\n    for (let m = 0; m < months.length; m++) {\n      dates.push(`${years[y]}-${months[m]}`);\n    }\n  }\n  for (let m = 0; m <= months.indexOf(lastMonth); m++) {\n    dates.push(`${String(lastYear)}-${months[m]}`);\n  }\n  return (\n    <Layout>\n      <p>\n        My New Year's Resolution in 2015 was to read a book a week. I thought it\n        was attainable based on my reading habits prior to that point. However\n        without any real data, I was not sure how difficult it would be. I have\n        used this blog to keep track of what I was reading, adding a little bit\n        of metadata to the posts to keep track of things like genre and how good\n        or bad I thought the book was.\n      </p>\n\n      <p>\n        The reading a book a week project was a success, but without that\n        specific goal my reading habits have fallen off a little bit. How do I\n        know this? I continued to keep track of the data by posting here every\n        time I read a book. Recently I added the page counts for all of the\n        books that I read to the metadata that I collect. This allowed me to\n        create some graphs that I found pretty interesting. As part of the build\n        process for this site, I will now be autogenerating these graphs so that\n        this page stays up to date with the details of my reading habits.\n      </p>\n\n      <p>\n        Each graph has an equal width bar for each month starting with January\n        2015 and ending at the month in which I last posted about a book\n        (usually the current month). The maximum value should be labeled near\n        the month in which that value was attained. The height of the bars is\n        scaled linearly between zero and the max.\n      </p>\n      <BarChart\n        title=\"Books read per month\"\n        dates={dates}\n        data={monthly}\n        datum={(val) => val && val[\"count\"]}\n      />\n      <BarChart\n        title=\"Pages read per month\"\n        dates={dates}\n        data={monthly}\n        datum={(val) => val && val[\"pagecount\"]}\n      />\n      <BarChart\n        title=\"Ratio of pages read to number of books\"\n        dates={dates}\n        data={monthly}\n        datum={(val) =>\n          val && val[\"count\"] > 0 && Math.round(val[\"pagecount\"] / val[\"count\"])\n        }\n      />\n      {years.map((year) => (\n        <Yearly key={year} year={year} data={yearly[year]} />\n      ))}\n      <Yearly key={\"total\"} year={\"Total\"} data={totals} />\n    </Layout>\n  );\n};\n\nconst RightCell = styled.td`\n  text-align: right;\n`;\n\nconst Yearly = ({ year, data }) =>\n  data ? (\n    <table>\n      <caption>\n        <h4>{year}</h4>\n      </caption>\n      <tbody>\n        <tr>\n          <td>Books Read</td>\n          <RightCell>{niceNum(data.count)}</RightCell>\n        </tr>\n        <tr>\n          <td>Pages Read</td>\n          <RightCell>{niceNum(data.pagecount)}</RightCell>\n        </tr>\n        <tr>\n          <td>Bad</td>\n          <RightCell>{data.bad}</RightCell>\n        </tr>\n        <tr>\n          <td>Okay</td>\n          <RightCell>{data.okay}</RightCell>\n        </tr>\n        <tr>\n          <td>Good</td>\n          <RightCell>{data.good}</RightCell>\n        </tr>\n        <tr>\n          <td>Great</td>\n          <RightCell>{data.great}</RightCell>\n        </tr>\n        <tr>\n          <td>Fiction</td>\n          <RightCell>{data.fiction}</RightCell>\n        </tr>\n        <tr>\n          <td>Nonfiction</td>\n          <RightCell>{data.nonfiction}</RightCell>\n        </tr>\n      </tbody>\n    </table>\n  ) : null;\n\nexport default ReadingPage;\n\nexport const Head = () => <Seo pathname=\"/reading\" />;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { categories: { eq: \"book\" } } }\n      sort: { frontmatter: { date: ASC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"YYYY-MM\")\n            tags\n            pagecount\n          }\n        }\n      }\n    }\n  }\n`;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","module.exports = require('./forEach');\n","var baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n"],"names":["niceNum","num","back","Math","floor","Chart","_styled","target","rhythm","ChartWrapper","HoverData","name","styles","_ref","_ref2","BarChart","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","value","year","month","enterBar","bucket","parts","split","setState","leaveBar","_inheritsLoose","prototype","render","title","dates","data","datum","this","props","bars","max","maxIdx","d","push","bucketCount","bucketSize","ceil","buckets","map","bar","round","firstDate","niceMonth","lastDate","barWidthVal","barWidth","hoverString","___EmotionJSX","css","_css","position","left","top","i","Bar","key","onMouseEnter","onMouseLeave","React","_ref4","_ref3","width","height","backgroundColor","display","borderRight","borderLeft","borderBottom","RightCell","Yearly","count","pagecount","bad","okay","good","great","fiction","nonfiction","books","allMarkdownRemark","edges","firstYear","firstMonth","lastMonth","lastYear","monthly","yearly","totals","_each","book","node","frontmatter","date","tags","monthData","yearData","_includes","months","parseInt","years","y","String","m","indexOf","Layout","val","Head","Seo","pathname","module","exports","array","predicate","fromIndex","fromRight","index","baseFindIndex","baseIsNaN","strictIndexOf","trimmedEndIndex","reTrimStart","string","slice","replace","arrayMap","object","reWhitespace","test","charAt","baseIndexOf","isArrayLike","isString","toInteger","values","nativeMax","collection","guard","toNumber","INFINITY","toFinite","result","remainder","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","other","valueOf","isBinary","baseValues","keys"],"sourceRoot":""}